{"version":3,"sources":["utilities/_helpers.scss","base/_base.scss","custom-select.scss","utilities/_config.scss","utilities/_utilities.scss"],"names":[],"mappings":"AAsBA;EACC,iCAA6C;EAC7C,qCAAwD;EACxD,6BAA4B;EAC5B,qBAAgC;EAChC,iBAAgB,EAAA;;AC3BjB;EACC,UAAQ;EACR,WAAS;EACT,uBAAsB,EAAA;;AAEvB;EACC,iBAAgB,EAAA;;ACJjB;EACC,kBAAkB,EAAA;EAClB;IACC,YAAU;IACV,YAAU;IACV,eAAa,EAAA;;AAGf;EACC,wECA0C;EDC1C,gBAAe;EACf,gCAA8B;EAC9B,YAAW;EACX,eAAc;EACd,0BAAyC;EACzC,mBAAkB;EAClB,uBCSwB;EC0FxB,kDAA8C;EAC9C,6BAFiC;EAGjC,gCFpGmD;EEqGnD,iCFrGmF,EAAA;EACnF;IACC,WAAU;IACV,YAAW;IACX,mBAAkB;IAClB,WAAS;IACT,gBAAe;IACf,cAAY;IACZ,WAAU;KACV,6CAA6C;IAC1C,iEAA+D;IAC/D,yBAAwB;IACxB,kBAAiB;IACjB,gBAAe,EAAA;IACf;MACF,cAAa,EAAA;EAGf;IACC,cAAa,EAAA;EAEd;IACC,0BAA0C;IAC1C,iCCAqC,EAAA;EDEtC;IACI,eAAc;IACd,wBAAsB;IACtB,wBAAuB;IACvB,oBAAmB;IACnB,iBAAgB;IAChB,gBAAe;IACf,mBAAkB;IAClB,sBCZuB;IDavB,kBCd4B;IDe5B,wBAAqC;IACrC,YC7BqB,EAAA;EDkCzB;IACC,YAAW;IACX,cAAa;IACb,mBAAkB;IAClB,QAAO;IACP,aAAY;IACZ,WAAU;IACV,0BAAyC;IACzC,iBAAgB;IAChB,YC3CwB,EAAA;ID4CxB;MACC,uBC5CsB;MD6CtB,kBCjC8B,EAAA;MDqC9B;QACC,0BCxDyB;QDyDzB,YCnDqB,EAAA;EC8CvB;IF/DF;MAyEE,YAAW;MACX,sBAAqB;MACrB,aCjDc,EAAA,EAAA","file":"custom-select.css","sourcesContent":["//Screen reader text\r\n%srt{\r\n\tborder: 0;\r\n\tclip: rect(0 0 0 0);\r\n\theight: 1px;\r\n\tmargin: -1px;\r\n\toverflow: hidden;\r\n\tpadding: 0;\r\n\tposition: absolute;\r\n\twidth: 1px;\r\n}\r\n\r\n%clearfix-none{\r\n\tdisplay: inherit;\r\n}\r\n\r\n%pseudos{\r\n\tdisplay: block;\r\n\tcontent:\"\";\r\n\tposition: absolute;\r\n}\r\n\r\n%image-option{\r\n\tbackground-size : $image-size-X $image-size-Y;\r\n\tbackground-position :$image-position-X $image-position-Y;\r\n\tbackground-repeat: no-repeat;\r\n\tpadding-left : $image-size-X * 2;\r\n\ttransition: none;\r\n}","*{\r\n\tmargin:0;\r\n\tpadding:0;\r\n\tbox-sizing: border-box;\r\n}\r\nul{\r\n\tlist-style: none;\r\n}","@import 'utilities/manifest';\r\n@import 'base/manifest';\r\n.demo-wrapper{\r\n\tpadding: rem(30px);\r\n\t&:after{\r\n\t\tclear:both;\r\n\t\tcontent:\"\";\r\n\t\tdisplay:block;\r\n\t}\r\n}\r\n.custom-select-wrapper{\r\n\tfont-family: $font-family-sans;\r\n\tcursor: pointer;\r\n\tmargin: 0 rem(5px) rem(5px) 0 ;\r\n\twidth: 100%;\r\n\tdisplay: block;\r\n\tborder: $border-width solid $border-color;\r\n\tposition: relative;\r\n\tbackground-color: $select-bg;\r\n\t@include bg('down-arrow.svg', $position: 98% center, $size: $arrow-size $arrow-size); \r\n\tselect{\r\n\t\twidth: 1px;\r\n\t\theight: 1px;\r\n\t\tposition: absolute;\r\n\t\tz-index:2;\r\n\t\tcursor: pointer;\r\n\t\toutline:none;\r\n\t\topacity: 0;\r\n\t\t_noFocusLine: expression(this.hideFocus=true); \r\n\t    -ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\r\n\t    filter: alpha(opacity=0);\r\n\t    -khtml-opacity: 0;\r\n\t    -moz-opacity: 0;\r\n\t    &:focus{\r\n\t\t\toutline: none;\t\r\n\t\t}\r\n\t}\r\n\t&:focus{\r\n\t\toutline: none;\t\r\n\t}\r\n\t&:hover{\r\n\t\tborder: $border-width solid $primary-color;\r\n\t\ttransition: $hover-transition;\r\n\t}\r\n\t.custom-select-holder{\r\n\t    display: block;\r\n\t    margin: 0 rem(5px) 0 0;\r\n\t    text-overflow: ellipsis;\r\n\t    white-space: nowrap;            \r\n\t    overflow: hidden;\r\n\t    cursor: pointer;\r\n\t    position: relative;\r\n\t    line-height: $text-line-height;\r\n\t    padding: $select-padding;\r\n\t    padding-right: $arrow-size + rem(2px);\r\n\t    color: $select-text-color;\r\n\t    &.image-on-option{\r\n\t    \t@extend %image-option;\r\n\t\t}\r\n\t}\r\n\t.custom-select-option{\r\n\t\twidth: 100%;\r\n\t\tdisplay: none;\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\tz-index: 100;\r\n\t\tpadding: 0;\r\n\t\tborder: $border-width solid $border-color;\r\n\t\tborder-top: none;\r\n\t\tcolor: $option-text-color;\r\n\t\t.custom-select-list{\r\n\t\t\tbackground-color: $option-bg;\r\n\t\t\tpadding: $option-padding;\r\n\t\t\t&.image-on-option{\r\n\t    \t\t@extend %image-option;\r\n\t\t\t}\r\n\t\t\t&:hover,&.focused{\r\n\t\t\t\tbackground-color: $primary-color;\r\n\t\t\t\tcolor: $hover-text-color;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t@include mq(md){\r\n\t\tfloat: left;\r\n\t\tdisplay: inline-block;\r\n\t\twidth: $md-width;\r\n\t}\r\n}","//Text\r\n$base__font-size: 16px !default;\r\n$base__line: 24px !default;\r\n\r\n//Font Stacks\r\n\r\n$font-url--google : 'http://fonts.googleapis.com/css?family=Lato:100,300,400,700,900';\r\n\r\n$font-family-sans-fallback: 'Arial', sans-serif;\r\n$font-family-sans: 'Lato','Helvetica Neue', 'Helvetica', $font-family-sans-fallback;\r\n$font-family--primary : $font-family-sans !default;\r\n$font-family--secondary : $font-family-sans !default;\r\n\r\n//Path to Assets\r\n$path--rel: \"../images\";\r\n\r\n//Colors\r\n$white: #fff;\r\n$black: #000;\r\n$grape-purple: #933EC5; \r\n$default-gray: #d4d4d4;\r\n$primary-color: $grape-purple !default;\r\n$border-color: $default-gray !default;\r\n$select-bg: $white !default;\r\n$select-text-color: $black !default;\r\n$option-bg: $white !default;\r\n$option-text-color: $black !default;\r\n$hover-text-color: $white !default;\r\n\r\n//Breakpoints\r\n$sm-device: 768px !default;\r\n$md-device: 992px !default;\r\n$lg-device: 1200px !default;\r\n\r\n//Dimensions\r\n$default-padding: rem(10px);\r\n$md-width: 300px !default;\r\n$border-width: 1px !default;\r\n$select-padding: $default-padding !default;\r\n$option-padding: $default-padding !default;\r\n$text-line-height: rem(30px) !default;\r\n$arrow-size: rem(20px) !default;\r\n$hover-transition: all 0.6s ease-in-out;\r\n\r\n//Image on dropdown options\r\n$image-size-X: rem(20px) !default;\r\n$image-size-Y: rem(20px) !default;\r\n$image-position-X: rem(10px) !default;\r\n$image-position-Y: center !default;","@if variable-exists(font-url--google){\r\n\t@import url($font-url--google);\r\n}\r\n\r\n@if variable-exists(typefaces) {\r\n  @each $file, $option in $typefaces {\r\n    @font-face {\r\n      font-family: map-get(map-get($typefaces, $file), family);\r\n      font-style: map-get(map-get($typefaces, $file), style);\r\n      font-weight: map-get(map-get($typefaces, $file), weight);\r\n      src: url('../fonts/#{$file}.ttf') format('truetype'),\r\n           url('../fonts/#{$file}.woff') format('woff'),\r\n           url('../fonts/#{$file}.woff2') format('woff2');\r\n    }\r\n  }\r\n}\r\n\r\n//Calculate em values\r\n@function em($target, $context: $base__font-size){\r\n\t@return($target/$context) * 1em;\r\n}\r\n\r\n//Calculate rem values\r\n@function rem($size){\r\n  @return ($size/$base__font-size) * 1rem;\r\n}\r\n\r\n//Color Palette\r\n@function palette($palette, $shade: base){\r\n\t@return map-get(map-get($palettes, $palette), $shade);\r\n}\r\n\r\n//Check Even\r\n@function even($number){\r\n\t@if $number%2 == 0{\r\n\t\t@return 1;\r\n\t}\r\n\t@else{\r\n\t\t@return 0;\r\n\t}\r\n}\r\n\r\n//Mixins\r\n@mixin bg-colors($map){\r\n\t@each $theme, $color in $map{\r\n\t\t&--#{$theme}{\r\n\t\t\tbackground: $color;\r\n\t\t}\r\n\t}\r\n} \r\n\r\n//BEM(Block Element Modifier) Naming Convention\r\n//For Element\r\n@mixin e($element){\r\n\t&__#{$element}{\r\n\t\t@content;\r\n\t}\r\n}\r\n//For Modifiers\r\n@mixin m($modifier){\r\n\t&--#{$modifier}{\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n//Media queries\r\n@mixin mq($break){\r\n\t@if $break == \"sm\" {\r\n\t\t@media(min-width: 1px) and (max-width: $sm-device - 1px){\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else if $break == \"md\" {\r\n\t\t@media(min-width: $sm-device){\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else if $break == \"lg\" {\r\n\t\t@media(min-width: $lg-device){\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else {\r\n\t\t@error \"No value could be retrieved for '#{$break}'\";\r\n\t}\r\n}\r\n\r\n//Hover Mixin\r\n@mixin hover {\r\n  &:hover,\r\n  &:active,\r\n  &:focus { @content; }\r\n}\r\n\r\n//Turn px in rem with px fallback\r\n@mixin rem($size) {\r\n  font-size: $size; //Fallback in px\r\n  font-size: calculateRem($size);\r\n}\r\n\r\n//Pseudo-elements\r\n@mixin psuedo-el($el, $el-width: null, $el-height: null){\r\n\t@if $el == ':before' or $el == 'after'{\r\n\t\t&:#{$el}{\r\n\t\t\t@extend %pseudos;\r\n\t\t\twidth: $el-width;\r\n\t\t\theight: $el-height;\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else{\r\n\t\t@warn \"#{$el} is not a valid pseudo-element\";\r\n\t}\r\n}\r\n\r\n//Set Background\r\n@mixin bg($img, $repeat: no-repeat, $position: 0 0,  $size: cover){\r\n\tbackground-image: url('#{$path--rel}/#{$img}');\r\n\tbackground-repeat: $repeat;\r\n\tbackground-position: $position;\r\n\tbackground-size: $size;\r\n}"],"sourceRoot":"/source/"}